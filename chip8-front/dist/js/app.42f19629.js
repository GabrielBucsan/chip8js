(function(e){function t(t){for(var r,a,c=t[0],o=t[1],u=t[2],h=0,l=[];h<c.length;h++)a=c[h],Object.prototype.hasOwnProperty.call(i,a)&&i[a]&&l.push(i[a][0]),i[a]=0;for(r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r]);d&&d(t);while(l.length)l.shift()();return n.push.apply(n,u||[]),s()}function s(){for(var e,t=0;t<n.length;t++){for(var s=n[t],r=!0,c=1;c<s.length;c++){var o=s[c];0!==i[o]&&(r=!1)}r&&(n.splice(t--,1),e=a(a.s=s[0]))}return e}var r={},i={app:0},n=[];function a(t){if(r[t])return r[t].exports;var s=r[t]={i:t,l:!1,exports:{}};return e[t].call(s.exports,s,s.exports,a),s.l=!0,s.exports}a.m=e,a.c=r,a.d=function(e,t,s){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(a.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(s,r,function(t){return e[t]}.bind(null,r));return s},a.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/chip8js/";var c=window["webpackJsonp"]=window["webpackJsonp"]||[],o=c.push.bind(c);c.push=t,c=c.slice();for(var u=0;u<c.length;u++)t(c[u]);var d=o;n.push([0,"chunk-vendors"]),s()})({0:function(e,t,s){e.exports=s("56d7")},"034f":function(e,t,s){"use strict";s("85ec")},"1ec9":function(e,t,s){},4474:function(e,t,s){},"56d7":function(e,t,s){"use strict";s.r(t);s("4de4"),s("d3b7"),s("25f0"),s("4d90"),s("5cc6"),s("9a8c"),s("a975"),s("735e"),s("c1ac"),s("d139"),s("3a7b"),s("d5d6"),s("82f8"),s("e91f"),s("60bd"),s("5f96"),s("3280"),s("3fcc"),s("ca91"),s("25a1"),s("cd26"),s("3c5d"),s("2954"),s("649e"),s("219c"),s("170b"),s("b39a"),s("72f7"),s("e260"),s("e6cf"),s("cca6"),s("a79d");var r=s("2b0e"),i=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"app"}},[s("div",{staticClass:"left-panel"},[s("registers",{ref:"registers"}),s("memory",{ref:"memory"}),s("keyboard"),s("span",[e._v(e._s(e.fps))])],1),s("div",[s("display",{ref:"display"})],1)])},n=[],a=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"registers"}},[s("div",{staticClass:"register-container"},[s("span",{staticClass:"register-label"},[e._v("REGISTERS")]),s("div",{staticClass:"register-list"},e._l(e.registers,(function(t){return s("div",{key:t.name,staticClass:"register-item",class:{"register-changed":t.changed}},[s("div",[e._v(" "+e._s(t.name)+" ")]),s("div",[e._v(" "+e._s(e._f("hex")(t.value,t.size))+" ")])])})),0)])])},c=[],o={name:"Registers",inject:["cpu"],data:function(){return{registers:[]}},created:function(){this.update()},methods:{update:function(){var e=[];e.push({name:"PC",value:this.cpu.getProgramCounter(),size:4,changed:!1}),e.push({name:"I",value:this.cpu.addressRegister.getUint16(0),size:4,changed:!1}),e.push({name:"SP",value:this.cpu.stackPointer.getUint8(0),size:2,changed:!1}),e.push({name:"DT",value:this.cpu.delayTimer.getUint8(0),size:2,changed:!1}),e.push({name:"ST",value:this.cpu.soundTimer.getUint8(0),size:2,changed:!1});for(var t=0;t<16;t++)e.push({name:"V".concat(t.toString(16).toUpperCase()),value:this.cpu.getRegister(t),size:2,changed:!1});if(void 0!==this.registers&&this.registers.length>0)for(var s=0;s<e.length;s++)e[s].value!=this.registers[s].value&&(e[s].changed=!0);this.registers=e}}},u=o,d=(s("743f"),s("2877")),h=Object(d["a"])(u,a,c,!1,null,null,null),l=h.exports,m=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"memory"}},[s("div",{staticClass:"memory-container"},[s("span",{staticClass:"memory-label"},[e._v("MEMORY AT PC")]),e._m(0),e._l(e.pcMemory,(function(t){return s("div",{key:t.address,staticClass:"memory-item",class:{selected:t.selected}},[s("span",[e._v(e._s(e._f("hex")(t.address,4))+" ")]),s("span",[e._v(e._s(e._f("hex")(t.value,4)))]),s("span",[e._v(e._s(t.instruction.mnem))])])}))],2),s("div",{staticClass:"grid-50"},[s("div",{staticClass:"memory-container"},[s("span",{staticClass:"memory-label"},[e._v("MEMORY AT I")]),e._m(1),e._l(e.iMemory,(function(t){return s("div",{key:t.address,staticClass:"memory-item-50",class:{selected:t.selected}},[s("span",[e._v(e._s(e._f("hex")(t.address,4))+" ")]),s("span",[e._v(e._s(e._f("hex")(t.value,4)))])])}))],2),s("div",{staticClass:"memory-container"},[s("span",{staticClass:"memory-label"},[e._v("STACK")]),e._m(2),e._l(e.stack,(function(t){return s("div",{key:t.address,staticClass:"memory-item-50",class:{selected:t.selected}},[s("span",[e._v(e._s(e._f("hex")(t.address,4))+" ")]),s("span",[e._v(e._s(e._f("hex")(t.value,4)))])])}))],2)]),s("div",{staticClass:"memory-container"},[s("div",{staticClass:"memory-label"},[s("span",[e._v(e._s(e.selectedInstruction.opcode))]),s("span",[e._v(" ("+e._s(e.selectedInstruction.mnem)+")")])]),s("span",{staticClass:"margin-top-5"},[e._v(e._s(e.selectedInstruction.desc))])])])},p=[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"memory-header"},[s("span",[e._v("ADDRESS")]),s("span",[e._v("CONTENT")]),s("span",[e._v("OPCODE")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"memory-header-50"},[s("span",[e._v("ADDRESS")]),s("span",[e._v("CONTENT")])])},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{staticClass:"memory-header-50"},[s("span",[e._v("ADDRESS")]),s("span",[e._v("CONTENT")])])}],v=(s("99af"),s("a9e3"),function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:4;return Number(e).toString(16).padStart(t,"0").toUpperCase()}),g=function(e){var t=e>>12;switch(t){case 0:var s=255&e;switch(s){case 224:return{mnem:"CLS",opcode:"00E0",desc:"Clears the screen"};case 238:return{mnem:"RET",opcode:"00EE",desc:"Returns from a subroutine"}}return"";case 1:var r=4095&e;return{mnem:"JP   ".concat(v(r)),opcode:"1NNN",desc:"Jumps to address ".concat(v(r))};case 2:var i=4095&e;return{mnem:"CALL ".concat(v(i)),opcode:"2NNN",desc:"Calls subroutine at ".concat(v(i))};case 3:var n=e>>8&15,a=255&e;return{mnem:"SE   V".concat(v(n,1),", ").concat(v(a,2)),opcode:"3XNN",desc:"Skips the next instruction if V".concat(v(n,1)," equals ").concat(v(a,2),". (Usually the next instruction is a jump to skip a code block)")};case 4:var c=e>>8&15,o=255&e;return{mnem:"SNE  V".concat(v(c,1),", ").concat(v(o,2)),opcode:"4XNN",desc:"Skips the next instruction if V".concat(v(c,1)," doesn't equal ").concat(v(o,2),". (Usually the next instruction is a jump to skip a code block)")};case 5:var u=e>>8&15,d=e>>4&15;return{mnem:"SE   V".concat(v(u,1),", V").concat(v(d,1)),opcode:"5XY0",desc:"Skips the next instruction if V".concat(v(u,1)," equals V").concat(v(d,1),". (Usually the next instruction is a jump to skip a code block)")};case 6:var h=e>>8&15,l=255&e;return{mnem:"LD   V".concat(v(h,1),", ").concat(v(l,2)),opcode:"6XNN",desc:"Sets V".concat(v(h,1)," to ").concat(v(l,2),".")};case 7:var m=e>>8&15,p=255&e;return{mnem:"ADD  V".concat(v(m,1),", ").concat(v(p,2)),opcode:"7XNN",desc:"Adds ".concat(v(p,2)," to V").concat(v(m,1),". (Carry flag is not changed)")};case 8:var g=e>>8&15,f=e>>4&15,y=15&e;switch(y){case 0:return{mnem:"LD   V".concat(v(g,1),", V").concat(v(f,1)),opcode:"8XY0",desc:"Sets V".concat(v(g,1)," to the value of V").concat(v(f,1))};case 1:return{mnem:"OR   V".concat(v(g,1),", V").concat(v(f,1)),opcode:"8XY1",desc:"Sets V".concat(v(g,1)," to V").concat(v(g,1)," or V").concat(v(f,1),". (Bitwise OR operation)")};case 2:return{mnem:"AND  V".concat(v(g,1),", V").concat(v(f,1)),opcode:"8XY2",desc:"Sets V".concat(v(g,1)," to V").concat(v(g,1)," and V").concat(v(f,1),". (Bitwise AND operation)")};case 3:return{mnem:"XOR  V".concat(v(g,1),", V").concat(v(f,1)),opcode:"8XY3",desc:"Sets V".concat(v(g,1)," to V").concat(v(g,1)," xor V").concat(v(f,1))};case 4:return{mnem:"ADD  V".concat(v(g,1),", V").concat(v(f,1)),opcode:"8XY4",desc:"Adds V".concat(v(f,1)," to V").concat(v(g,1),". VF is set to 1 when there's a carry, and to 0 when there isn't")};case 5:return{mnem:"SUB  V".concat(v(g,1),", V").concat(v(f,1)),opcode:"8XY5",desc:"V".concat(v(f,1)," is subtracted from V").concat(v(g,1),". VF is set to 0 when there's a borrow, and 1 when there isn't")};case 6:return{mnem:"SHR  V".concat(v(g,1)),opcode:"8XY6",desc:"Stores the least significant bit of V".concat(v(g,1)," in VF and then shifts V").concat(v(g,1)," to the right by 1")};case 7:return{mnem:"SUBN V".concat(v(g,1),", V").concat(v(f,1)),opcode:"8XY7",desc:"Sets V".concat(v(g,1)," to V").concat(v(f,1)," minus V").concat(v(g,1),". VF is set to 0 when there's a borrow, and 1 when there isn't")};case 14:return{mnem:"SHL  V".concat(v(g,1)),opcode:"8XYE",desc:"Stores the most significant bit of V".concat(v(g,1)," in VF and then shifts V").concat(v(g,1)," to the left by 1")}}return;case 9:var V=e>>8&15,b=e>>4&15;return{mnem:"SNE  V".concat(v(V,1),", V").concat(v(b,1)),opcode:"9XY0",desc:"Skips the next instruction if V".concat(v(V,1)," doesn't equal V").concat(v(b,1),". (Usually the next instruction is a jump to skip a code block)")};case 10:var k=4095&e;return{mnem:"LD   I, ".concat(v(k)),opcode:"ANNN",desc:"Sets I to the address ".concat(v(k))};case 11:var R=4095&e;return{mnem:"JP   V0, V".concat(v(R)),opcode:"BNNN",desc:"Jumps to the address ".concat(v(R)," plus V0")};case 12:var C=e>>8&15,_=255&e;return{mnem:"RND  V".concat(v(C,1),", ").concat(v(_,2)),opcode:"CXNN",desc:"Sets V".concat(v(C,1)," to the result of a bitwise and operation on a random number (Typically: 0 to 255) and ").concat(v(_,2))};case 13:var U=e>>8&15,w=e>>4&15,S=1+(15&e);return{mnem:"DRW  V".concat(v(U,1),", V").concat(v(w,1),", ").concat(v(S,1)),opcode:"DXYN",desc:"Draws a sprite at coordinate (V".concat(v(U,1),", V").concat(v(w,1),") that has a width of 8 pixels and a height of ").concat(S+1," pixels. Each row of 8 pixels is read as bit-coded starting from memory location I. I value doesn’t change after the execution of this instruction. As described above, VF is set to 1 if any screen pixels are flipped from set to unset when the sprite is drawn, and to 0 if that doesn’t happen")};case 14:var x=255&e;switch(x){case 158:var P=e>>8&15;return{mnem:"SKP  V".concat(v(P,1)),opcode:"EX9E",desc:"Skips the next instruction if the key stored in V".concat(v(P,1)," is pressed. (Usually the next instruction is a jump to skip a code block)")};case 161:var M=e>>8&15;return{mnem:"SKNP V".concat(v(M,1)),opcode:"EXA1",desc:"Skips the next instruction if the key stored in V".concat(v(M,1)," isn't pressed. (Usually the next instruction is a jump to skip a code block)")}}return;case 15:var X=255&e;switch(X){case 7:var N=e>>8&15;return{mnem:"LD   V".concat(v(N,1),", DT"),opcode:"FX07",desc:"Sets V".concat(v(N,1)," to the value of the delay timer")};case 10:var E=e>>8&15;return{mnem:"LD   V".concat(v(E,1),", K"),opcode:"FX0A",desc:"A key press is awaited, and then stored in V".concat(v(E,1),". (Blocking Operation. All instruction halted until next key event)")};case 21:var D=e>>8&15;return{mnem:"LD   DT, V".concat(v(D,1)),opcode:"FX15",desc:"Sets the delay timer to V".concat(v(D,1))};case 24:var z=e>>8&15;return{mnem:"LD   ST, V".concat(v(z,1)),opcode:"FX18",desc:"Sets the sound timer to V".concat(v(z,1))};case 30:var I=e>>8&15;return{mnem:"ADD  I, V".concat(v(I,1)),opcode:"FX1E",desc:"Adds V".concat(v(I,1)," to I. VF is not affected")};case 41:var O=e>>8&15;return{mnem:"LD   F, V".concat(v(O,1)),opcode:"FX29",desc:"Sets I to the location of the sprite for the character in V".concat(v(O,1),". Characters 0-F (in hexadecimal) are represented by a 4x5 font")};case 51:var T=e>>8&15;return{mnem:"LD   B, V".concat(v(T,1)),opcode:"FX33",desc:"Store BCD representation of V".concat(v(T,1)," in memory locations I, I+1, and I+2")};case 85:var j=e>>8&15;return{mnem:"LD   [I], V".concat(v(j,1)),opcode:"FX55",desc:"Stores V0 to V".concat(v(j,1)," (including V").concat(v(j,1),") in memory starting at address I. The offset from I is increased by 1 for each value written, but I itself is left unmodified")};case 101:var L=e>>8&15;return{mnem:"LD   V".concat(v(L,1),", [I]"),opcode:"FX65",desc:"Fills V0 to V".concat(v(L,1)," (including V").concat(v(L,1),") with values from memory starting at address I. The offset from I is increased by 1 for each value written, but I itself is left unmodified")}}return""}},f={decode:g},y={name:"Memory",inject:["cpu"],data:function(){return{pcMemory:[],iMemory:[],stack:[]}},created:function(){this.update()},methods:{update:function(){var e=this.cpu.getProgramCounter();this.pcMemory=this.createList(e,10,3,this.cpu.memory,!0),this.selectedInstruction=this.pcMemory.filter((function(e){return e.selected}))[0].instruction;var t=this.cpu.addressRegister.getUint16(0);this.iMemory=this.createList(t,5,1,this.cpu.memory);var s=this.cpu.stackPointer.getUint8(0);this.stack=this.createList(s,5,5,this.cpu.stack)},createItem:function(e,t){var s=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];return{address:e,value:t.getUint16(e),instruction:r?f.decode(t.getUint16(e)):"",selected:s}},createList:function(e,t,s,r){var i=arguments.length>4&&void 0!==arguments[4]&&arguments[4],n=e-2*s;n<0&&(n=0);for(var a=[],c=0;c<t;c++){var o=n+2*c;o>r.byteLength&&(o=r.byteLength-2),a.push(this.createItem(o,r,o==e,i))}return a}}},V=y,b=(s("de45"),Object(d["a"])(V,m,p,!1,null,null,null)),k=b.exports,R=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},C=[function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"display"}},[s("canvas",{attrs:{id:"c"}})])}],_={name:"Display",inject:["display"],data:function(){return{displayContent:[],bgColor:"#0e0e0e",primColor:"#4af628",scale:10,sizeX:64,sizeY:32}},mounted:function(){this.initialize(),this.clear()},methods:{initialize:function(){var e=document.getElementById("c");e.width=this.sizeX*this.scale,e.height=this.sizeY*this.scale,this.ctx=e.getContext("2d",{alpha:!1})},update:function(){if(this.clear(),void 0!==this.ctx)for(var e=this.display.displayMemory,t=0;t<this.sizeY;t++)for(var s=0;s<this.sizeX/8;s++)for(var r=e.getUint8(t*this.sizeX/8+s).toString(2).padStart(8,"0"),i=0;i<r.length;i++)"1"==r[i]&&this.drawPixel(8*s+i,t)},drawPixel:function(e,t){this.ctx.fillStyle=this.primColor,this.ctx.fillRect(e*this.scale,t*this.scale,this.scale,this.scale)},clear:function(){void 0!==this.ctx&&(this.ctx.clearRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height),this.ctx.fillStyle=this.bgColor,this.ctx.fillRect(0,0,this.ctx.canvas.width,this.ctx.canvas.height))}}},U=_,w=(s("f49a"),Object(d["a"])(U,R,C,!1,null,null,null)),S=w.exports,x=function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("div",{attrs:{id:"keyboard"}})},P=[],M={name:"Keyboard",inject:["cpu"],mounted:function(){var e=this;document.addEventListener("keydown",(function(t){e.cpu.setKey(t.key,!0)})),document.addEventListener("keyup",(function(t){e.cpu.setKey(t.key,!1)}))}},X=M,N=Object(d["a"])(X,x,P,!1,null,null,null),E=N.exports,D={name:"App",components:{Registers:l,Memory:k,Display:S,Keyboard:E},inject:["cpu"],mounted:function(){var e=this,t=new Date,s=this,r=!1;setInterval((function(){if(void 0!==s.cpu&&!r){var e=new Date;this.fps=1e3/(e-t),t=e,s.cpu.step(),s.$refs.registers.update(),s.$refs.memory.update(),s.$refs.display.update()}}),0),window.addEventListener("keydown",(function(e){"p"==e.key&&(r=!r)})),window.addEventListener("keydown",(function(t){"Enter"==t.key&&(e.cpu.step(),e.$refs.registers.update(),e.$refs.memory.update(),e.$refs.display.update())}))}},z=D,I=(s("034f"),Object(d["a"])(z,i,n,!1,null,null,null)),O=I.exports,T=(s("caad"),s("c975"),s("2532"),s("d4ec")),j=s("bee2"),L=(s("c19f"),function(e){var t=new ArrayBuffer(e),s=new DataView(t);return s}),A={createMemory:L},Y=function(){function e(t,s){Object(T["a"])(this,e),this.memory=t,this.display=s,this.registers=A.createMemory(16),this.programCounter=A.createMemory(2),this.programCounter.setUint16(0,512),this.addressRegister=A.createMemory(2),this.stackPointer=A.createMemory(1),this.delayTimer=A.createMemory(1),this.soundTimer=A.createMemory(1),this.stack=A.createMemory(128),this.halted=!1;for(var r=[240,144,144,144,240,32,96,32,32,112,240,16,240,128,240,240,16,240,16,240,144,144,240,16,16,240,128,240,16,240,240,128,240,144,240,240,16,32,64,64,240,144,240,144,240,240,144,240,16,240,240,144,240,144,144,224,144,224,144,224,240,128,128,128,240,224,144,144,144,224,240,128,240,128,240,240,128,240,128,128],i=0;i<r.length;i++)this.memory.setUint8(i,r[i]);this.keyMap=["1","2","3","4","q","w","e","r","a","s","d","f","z","x","c","v"],this.keyPressed=[],this.lastKeyPressed;for(var n=0;n<this.keyMap.length;n++)this.keyPressed[this.keyMap[n]]=!1}return Object(j["a"])(e,[{key:"loadProgram",value:function(e){for(var t=0;t<e.length;t++)this.memory.setUint8(512+t,e[t])}},{key:"setRegister",value:function(e,t){if(e>16)throw new Error("[CPU] No such register");this.registers.setUint8(e,t)}},{key:"getRegister",value:function(e){if(e>16)throw new Error("[CPU] No such register");return this.registers.getUint8(e)}},{key:"setProgramCounter",value:function(e){this.programCounter.setUint16(0,e)}},{key:"getProgramCounter",value:function(){return this.programCounter.getUint16(0)}},{key:"getMemoryAt",value:function(e){return this.memory.getUint8(e)}},{key:"getMemoryAt16",value:function(e){return this.memory.getUint16(e)}},{key:"fetch",value:function(){var e=this.getProgramCounter(),t=(this.memory.getUint8(e)<<8)+(255&this.memory.getUint8(e+1));return this.setProgramCounter(e+2),t}},{key:"execute",value:function(e){var t=e>>12;switch(t){case 0:var s=255&e;switch(s){case 224:return void this.display.clearDisplay();case 238:var r=this.stackPointer.getUint8(0),i=this.stack.getUint16(r-2);return this.setProgramCounter(i),void this.stackPointer.setUint8(0,r-2)}return;case 1:var n=4095&e;return void this.setProgramCounter(n);case 2:var a=4095&e,c=this.stackPointer.getUint8(0);return this.stack.setUint16(c,this.getProgramCounter()),this.setProgramCounter(a),void this.stackPointer.setUint8(0,c+2);case 3:var o=e>>8&15,u=255&e;if(this.getRegister(o)==u){var d=this.programCounter.getUint16(0);this.programCounter.setUint16(0,d+2)}return;case 4:var h=e>>8&15,l=255&e;if(this.getRegister(h)!=l){var m=this.programCounter.getUint16(0);this.programCounter.setUint16(0,m+2)}return;case 5:var p=e>>8&15,v=e>>4&15;if(this.getRegister(p)==this.getRegister(v)){var g=this.programCounter.getUint16(0);this.programCounter.setUint16(0,g+2)}return;case 6:var f=e>>8&15,y=255&e;return void this.setRegister(f,y);case 7:var V=e>>8&15,b=255&e;return void this.setRegister(V,this.getRegister(V)+b);case 8:var k=e>>8&15,R=this.getRegister(k),C=e>>4&15,_=this.getRegister(C),U=15&e;switch(U){case 0:return void this.setRegister(k,_);case 1:return void this.setRegister(k,R|_);case 2:return void this.setRegister(k,R&_);case 3:return void this.setRegister(k,R^_);case 4:var w=R+_;return w>255?this.setRegister(15,1):this.setRegister(15,0),void this.setRegister(k,255&w);case 5:var S=R-_;return _>R?(this.setRegister(15,0),S=0):this.setRegister(15,1),void this.setRegister(k,255&S);case 6:var x=1&R;return this.setRegister(15,x),void this.setRegister(k,R>>1);case 7:var P=_-R;return R>_?this.setRegister(15,0):this.setRegister(15,1),void this.setRegister(k,255&P);case 14:var M=(255&R)>>7;return this.setRegister(15,M),void this.setRegister(k,R<<1&255)}return;case 9:var X=e>>8&15,N=e>>4&15;if(this.getRegister(X)!=this.getRegister(N)){var E=this.programCounter.getUint16(0);this.programCounter.setUint16(0,E+2)}return;case 10:var D=4095&e;return void this.addressRegister.setUint16(0,D);case 11:var z=4095&e,I=this.getRegister(0);return void this.programCounter.setUint16(0,z+I);case 12:var O=Math.floor(255*Math.random())+0,T=e>>8&15,j=255&e;return void this.setRegister(T,j&O);case 13:for(var L=e>>8&15,A=e>>4&15,Y=15&e,F=this.getRegister(L),$=this.getRegister(A),K=this.addressRegister.getUint16(0),B=[],J=0;J<Y;J++)B.push(this.memory.getUint8(K+J).toString(2).padStart(8,"0"));var q=this.display.drawSprite(F,$,B);return void(q?this.setRegister(15,1):this.setRegister(15,0));case 14:var H=255&e;switch(H){case 158:var G=e>>8&15,W=this.getRegister(G),Q=this.keyPressed[this.keyMap[W]];if(Q){var Z=this.programCounter.getUint16(0);this.programCounter.setUint16(0,Z+2)}return;case 161:var ee=e>>8&15,te=this.getRegister(ee),se=this.keyPressed[this.keyMap[te]];if(!se){var re=this.programCounter.getUint16(0);this.programCounter.setUint16(0,re+2)}return}return;case 15:var ie=255&e;switch(ie){case 7:var ne=e>>8&15,ae=this.delayTimer.getUint8(0);return void this.setRegister(ne,ae);case 10:if(this.halted){if(this.lastKeyPressed){this.halted=!1;var ce=e>>8&15;this.setRegister(ce,this.keyMap.indexOf(this.lastKeyPressed)),this.lastKeyPressed=void 0,this.setProgramCounter(this.getProgramCounter()+2)}}else this.halted=!0,this.setProgramCounter(this.getProgramCounter()-2);return;case 21:var oe=e>>8&15,ue=this.getRegister(oe);return void this.delayTimer.setUint8(0,ue);case 24:var de=e>>8&15,he=this.getRegister(de);return void this.soundTimer.setUint8(0,he);case 30:var le=e>>8&15,me=this.getRegister(le),pe=Number(this.addressRegister.getUint16(0))+Number(me);return void this.addressRegister.setUint16(0,pe);case 41:var ve=e>>8&15,ge=this.getRegister(ve),fe=5*ge;return void this.addressRegister.setUint16(0,fe);case 51:for(var ye=e>>8&15,Ve=this.getRegister(ye),be=Number(Ve).toString(10).padStart(3,"0"),ke=this.addressRegister.getUint16(0),Re=0;Re<3;Re++)this.memory.setUint8(ke+Re,Number(be[Re]));return;case 85:for(var Ce=e>>8&15,_e=this.addressRegister.getUint16(0),Ue=0;Ue<Ce+1;Ue++)this.memory.setUint8(_e+Ue,this.getRegister(Ue));return;case 101:for(var we=e>>8&15,Se=this.addressRegister.getUint16(0),xe=0;xe<we+1;xe++)this.setRegister(xe,this.memory.getUint8(Se+xe));return}return}}},{key:"setKey",value:function(e,t){this.keyMap.includes(e)&&(this.keyPressed[e]=t,t&&this.halted?this.lastKeyPressed=e:this.lastKeyPressed=void 0)}},{key:"step",value:function(){this.halted||(this.nextInstruction=this.fetch()),this.execute(this.nextInstruction);var e=this.delayTimer.getUint8(0);e>0&&this.delayTimer.setUint8(0,e-1)}}]),e}(),F=Y,$=function(){function e(t,s){var r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];Object(T["a"])(this,e),this.sizeX=t/8,this.sizeY=s,this.clear=r,this.displayMemory=A.createMemory(this.sizeX*this.sizeY),this.topLine="     ",this.bottomLine="     ";for(var i=0;i<64;i++)this.topLine+="".concat(Math.floor(i/10)," "),this.bottomLine+="".concat(i%10," ")}return Object(j["a"])(e,[{key:"test",value:function(){for(var e=0;e<this.sizeY;e++)for(var t=0;t<this.sizeX;t++)this.displayMemory.setUint8(e*this.sizeX+t,Math.floor(255*Math.random())+1)}},{key:"clearDisplay",value:function(){this.displayMemory=A.createMemory(this.sizeX*this.sizeY)}},{key:"drawSprite",value:function(e,t,s){for(var r=!1,i=0;i<s.length;i++){var n=e%8,a=parseInt(s[i],2)>>n,c=(t+i)%this.sizeY*this.sizeX+Math.floor(e%(8*this.sizeX)/this.sizeX);c>255&&(c=0);var o=this.displayMemory.getUint8(c);(o&a)>0&&(r=!0);var u=o^a;this.displayMemory.setUint8(c,u),0!=n&&(a=parseInt(s[i],2)<<8-n&255,c+1>255&&(c=-1),o=this.displayMemory.getUint8(c+1),(o&a)>0&&(r=!0),u=o^a,Math.floor(e%(8*this.sizeX)/this.sizeX)+1<this.sizeX&&this.displayMemory.setUint8(c+1,u))}return r}}]),e}(),K=$,B=[0,224,96,0,97,0,98,8,162,32,64,64,34,26,65,32,18,16,208,24,242,30,112,8,18,10,96,0,113,8,0,238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,64,95,80,87,84,84,0,252,4,244,20,212,84,84,0,63,32,47,40,43,42,42,0,254,2,250,10,234,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,84,84,84,84,116,0,84,84,84,84,116,0,0,0,42,42,42,42,42,42,59,0,42,42,42,42,42,42,238,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,84,84,84,84,84,84,84,0,0,116,84,84,84,84,84,59,42,42,42,42,42,42,42,238,42,42,42,42,42,42,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,84,87,80,95,64,127,0,84,84,212,20,244,4,252,0,42,42,43,40,47,32,63,0,42,42,234,10,250,2,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],J=[18,37,83,80,65,67,69,32,73,78,86,65,68,69,82,83,32,118,48,46,57,32,66,121,32,68,97,118,105,100,32,87,73,78,84,69,82,96,0,97,0,98,8,163,211,208,24,113,8,242,30,49,32,18,45,112,8,97,0,48,64,18,45,105,5,108,21,110,0,35,135,96,10,240,21,240,7,48,0,18,75,35,135,126,1,18,69,102,0,104,28,105,0,106,4,107,10,108,4,109,60,110,15,0,224,35,107,35,71,253,21,96,4,224,158,18,125,35,107,56,0,120,255,35,107,96,6,224,158,18,139,35,107,56,57,120,1,35,107,54,0,18,159,96,5,224,158,18,233,102,1,101,27,132,128,163,207,212,81,163,207,212,81,117,255,53,255,18,173,102,0,18,233,212,81,63,1,18,233,212,81,102,0,131,64,115,3,131,181,98,248,131,34,98,8,51,0,18,201,35,115,130,6,67,8,18,211,51,16,18,213,35,115,130,6,51,24,18,221,35,115,130,6,67,32,18,231,51,40,18,233,35,115,62,0,19,7,121,6,73,24,105,0,106,4,107,10,108,4,125,244,110,15,0,224,35,71,35,107,253,21,18,111,247,7,55,0,18,111,253,21,35,71,139,164,59,18,19,27,124,2,106,252,59,2,19,35,124,2,106,4,35,71,60,24,18,111,0,224,164,211,96,20,97,8,98,15,208,31,112,8,242,30,48,44,19,51,240,10,0,224,166,244,254,101,18,37,163,183,249,30,97,8,35,95,129,6,35,95,129,6,35,95,129,6,35,95,123,208,0,238,128,224,128,18,48,0,219,198,123,12,0,238,163,207,96,28,216,4,0,238,35,71,142,35,35,71,96,5,240,24,240,21,240,7,48,0,19,127,0,238,106,0,141,224,107,4,233,161,18,87,166,2,253,30,240,101,48,255,19,165,106,0,107,4,109,1,110,1,19,141,165,0,240,30,219,198,123,8,125,1,122,1,58,7,19,141,0,238,60,126,255,255,153,153,126,255,255,36,36,231,126,255,60,60,126,219,129,66,60,126,255,219,16,56,124,254,0,0,127,0,63,0,127,0,0,0,1,1,1,3,3,3,3,0,0,63,32,32,32,32,32,32,32,32,63,8,8,255,0,0,254,0,252,0,254,0,0,0,126,66,66,98,98,98,98,0,0,255,0,0,0,0,0,0,0,0,255,0,0,255,0,125,0,65,125,5,125,125,0,0,194,194,198,68,108,40,56,0,0,255,0,0,0,0,0,0,0,0,255,0,0,255,0,247,16,20,247,247,4,4,0,0,124,68,254,194,194,194,194,0,0,255,0,0,0,0,0,0,0,0,255,0,0,255,0,239,32,40,232,232,47,47,0,0,249,133,197,197,197,197,249,0,0,255,0,0,0,0,0,0,0,0,255,0,0,255,0,190,0,32,48,32,190,190,0,0,247,4,231,133,133,132,244,0,0,255,0,0,0,0,0,0,0,0,255,0,0,255,0,0,127,0,63,0,127,0,0,0,239,40,239,0,224,96,111,0,0,255,0,0,0,0,0,0,0,0,255,0,0,255,0,0,254,0,252,0,254,0,0,0,192,0,192,192,192,192,192,0,0,252,4,4,4,4,4,4,4,4,252,16,16,255,249,129,185,139,154,154,250,0,250,138,154,154,155,153,248,230,37,37,244,52,52,52,0,23,20,52,55,54,38,199,223,80,80,92,216,216,223,0,223,17,31,18,27,25,217,124,68,254,134,134,134,252,132,254,130,130,254,254,128,192,192,192,254,252,130,194,194,194,252,254,128,248,192,192,254,254,128,240,192,192,192,254,128,190,134,134,254,134,134,254,134,134,134,16,16,16,16,16,16,24,24,24,72,72,120,156,144,176,192,176,156,128,128,192,192,192,254,238,146,146,134,134,134,254,130,134,134,134,134,124,130,134,134,134,124,254,130,254,192,192,192,124,130,194,202,196,122,254,134,254,144,156,132,254,192,254,2,2,254,254,16,48,48,48,48,130,130,194,194,194,254,130,130,130,238,56,16,134,134,150,146,146,238,130,68,56,56,68,130,130,130,254,48,48,48,254,2,30,240,128,254,0,0,0,0,6,6,0,0,0,96,96,192,0,0,0,0,0,0,24,24,24,24,0,24,124,198,12,24,0,24,0,0,254,254,0,0,254,130,134,134,134,254,8,8,8,24,24,24,254,2,254,192,192,254,254,2,30,6,6,254,132,196,196,254,4,4,254,128,254,6,6,254,192,192,192,254,130,254,254,2,2,6,6,6,124,68,254,134,134,254,254,130,254,6,6,6,68,254,68,68,254,68,168,168,168,168,168,168,168,108,90,0,12,24,168,48,78,126,0,18,24,102,108,168,90,102,84,36,102,0,72,72,24,18,168,6,144,168,18,0,126,48,18,168,132,48,78,114,24,102,168,168,168,168,168,168,144,84,120,168,72,120,108,114,168,18,24,108,114,102,84,144,168,114,42,24,168,48,78,126,0,18,24,102,108,168,114,84,168,90,102,24,126,24,78,114,168,114,42,24,48,102,168,48,78,126,0,108,48,84,78,156,168,168,168,168,168,168,168,72,84,126,24,168,144,84,120,102,168,108,42,48,90,168,132,48,114,42,168,216,168,0,78,18,168,228,162,168,0,78,18,168,108,42,84,84,114,168,132,48,114,42,168,222,156,168,114,42,24,168,12,84,72,90,120,114,24,102,168,114,24,66,66,108,168,114,42,0,114,168,114,42,24,168,48,78,126,0,18,24,102,108,168,48,78,12,102,24,0,108,24,168,114,42,24,48,102,168,30,84,102,12,24,156,168,36,84,84,18,168,66,120,12,60,168,174,168,168,168,168,168,168,168,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],q=[0,224,99,0,100,1,101,238,53,238,19,16,99,0,100,2,101,238,102,238,85,96,19,16,99,0,100,3,101,238,69,253,19,16,99,0,100,4,101,238,117,1,53,239,19,16,99,0,100,5,111,1,101,238,102,239,133,101,63,0,19,16,99,0,100,6,111,0,101,239,102,238,133,101,63,1,19,16,111,0,99,0,100,7,101,238,102,239,133,103,63,1,19,16,99,0,100,8,111,1,101,239,102,238,133,103,63,0,19,16,99,0,100,9,101,240,102,15,133,97,53,255,19,16,99,1,100,0,101,240,102,15,133,98,53,0,19,16,99,1,100,1,101,240,102,15,133,99,53,255,19,16,111,0,99,1,100,2,101,129,133,14,63,1,19,16,99,1,100,3,111,1,101,71,133,14,63,0,19,16,99,1,100,4,111,0,101,1,133,6,63,1,19,16,99,1,100,5,111,1,101,2,133,6,63,0,19,16,99,1,100,6,96,21,97,120,163,208,241,85,241,101,48,21,19,16,49,120,19,16,99,1,100,7,96,138,163,208,240,51,163,208,240,101,48,1,19,16,96,1,240,30,240,101,48,3,19,16,96,1,240,30,240,101,48,8,19,16,19,50,19,14,163,42,96,19,97,9,208,24,243,41,96,34,97,11,208,21,244,41,96,40,97,11,208,21,19,14,255,240,240,255,240,240,240,255,163,88,96,21,97,11,99,8,208,24,112,8,243,30,48,45,19,58,163,112,96,2,97,24,99,8,208,24,112,5,243,30,48,62,19,76,19,14,240,136,136,240,136,136,136,240,120,132,132,132,132,132,132,120,132,196,164,148,140,132,132,132,192,160,160,192,160,160,192,0,0,0,160,160,224,32,32,224,0,0,0,0,0,0,0,0,192,160,160,192,160,160,192,0,0,0,96,160,192,128,96,0,0,0,96,128,64,32,192,0,128,128,192,128,128,128,96,0,224,128,128,128,128,128,224,0,0,0,64,160,160,160,64,0,32,32,32,96,160,160,96,0,0,0,96,160,192,128,96,0,0,0,0,96,64,64,80,0,0,0,0,0,0],H=[18,12,18,12,32,84,114,111,110,105,120,32,0,224,63,0,18,96,62,0,18,96,61,0,18,96,60,0,18,96,59,0,18,96,58,0,18,96,57,0,18,96,56,0,18,96,55,0,18,96,54,0,18,96,53,0,18,96,52,0,18,96,51,0,18,96,50,0,18,96,49,0,18,96,48,0,18,96,18,80,96,0,97,0,240,41,208,21,112,5,162,122,208,21,18,118,96,0,97,0,96,14,240,41,96,0,208,21,112,5,162,127,208,21,112,5,208,21,240,10,18,118,144,160,192,160,144,224,144,224,144,144],G=[106,2,107,12,108,63,109,12,162,234,218,182,220,214,110,0,34,212,102,3,104,2,96,96,240,21,240,7,48,0,18,26,199,23,119,8,105,255,162,240,214,113,162,234,218,182,220,214,96,1,224,161,123,254,96,4,224,161,123,2,96,31,139,2,218,182,141,112,192,10,125,254,64,0,125,2,96,0,96,31,141,2,220,214,162,240,214,113,134,132,135,148,96,63,134,2,97,31,135,18,70,2,18,120,70,63,18,130,71,31,105,255,71,0,105,1,214,113,18,42,104,2,99,1,128,112,128,181,18,138,104,254,99,10,128,112,128,213,63,1,18,162,97,2,128,21,63,1,18,186,128,21,63,1,18,200,128,21,63,1,18,194,96,32,240,24,34,212,142,52,34,212,102,62,51,1,102,3,104,254,51,1,104,2,18,22,121,255,73,254,105,255,18,200,121,1,73,2,105,1,96,4,240,24,118,1,70,64,118,254,18,108,162,242,254,51,242,101,241,41,100,20,101,0,212,85,116,21,242,41,212,85,0,238,128,128,128,128,128,128,128,0,0,0,0,0],W=[18,20,82,69,86,73,86,65,76,83,84,85,68,73,79,83,50,48,48,56,0,224,109,32,253,21,35,190,35,198,109,64,253,21,35,190,35,198,109,32,253,21,35,190,164,131,36,72,109,128,253,21,35,190,164,131,36,72,165,131,36,72,109,0,107,0,34,198,75,0,34,228,75,1,35,134,75,2,34,236,75,3,35,134,75,4,34,244,75,5,35,134,96,1,240,21,35,190,125,1,96,63,140,208,140,2,76,0,34,112,18,68,75,0,34,144,75,1,34,204,75,2,34,162,75,3,34,212,75,4,34,180,75,5,34,220,123,1,75,6,107,0,0,238,35,8,201,3,137,148,137,148,137,148,137,148,137,148,35,102,0,238,34,252,201,3,137,148,137,148,137,148,137,148,137,148,35,102,0,238,35,24,201,3,137,148,137,148,137,148,137,148,137,148,35,102,0,238,110,0,35,8,0,238,35,102,110,0,34,252,0,238,35,102,110,0,35,24,0,238,35,102,110,0,35,8,0,238,35,8,126,3,35,8,0,238,34,252,126,2,34,252,0,238,35,24,126,2,35,24,0,238,108,0,35,58,35,58,35,58,35,58,0,238,108,0,35,36,35,36,35,36,35,36,35,36,35,36,0,238,108,0,35,80,35,80,35,80,35,80,0,238,166,131,254,30,254,30,254,30,254,30,252,30,241,101,164,124,208,20,124,2,0,238,169,131,254,30,254,30,254,30,254,30,252,30,241,101,164,124,208,20,124,2,0,238,171,131,254,30,254,30,254,30,254,30,252,30,241,101,164,124,208,20,124,2,0,238,108,0,96,31,138,208,138,196,138,2,138,148,173,131,250,30,250,30,241,101,164,128,208,19,124,1,60,8,19,104,0,238,96,31,138,208,138,2,138,148,173,131,250,30,250,30,241,101,164,128,208,19,96,31,138,208,122,8,138,2,138,148,173,131,250,30,250,30,241,101,164,128,208,19,0,238,166,131,253,30,240,101,48,0,240,24,0,238,240,7,48,0,19,190,0,238,109,4,97,12,96,28,98,18,164,30,242,30,208,22,253,21,35,190,96,20,98,12,164,30,242,30,208,22,96,36,98,24,164,30,242,30,208,22,253,21,35,190,96,12,98,6,164,30,242,30,208,22,96,44,98,30,164,30,242,30,208,22,253,21,35,190,164,30,96,4,208,22,96,52,98,36,164,30,242,30,208,22,253,21,35,190,0,238,0,0,12,17,17,16,0,0,149,85,149,205,0,0,83,85,85,51,64,64,68,66,65,70,0,64,106,74,74,70,0,32,105,170,170,105,0,0,32,144,136,48,100,1,101,7,98,0,99,0,96,0,129,48,208,17,113,8,244,30,208,17,113,8,244,30,208,17,113,8,244,30,208,17,244,30,112,8,48,64,20,82,115,3,131,82,114,1,50,8,20,80,0,238,96,176,240,96,64,160,64,0,0,0,0,0,0,0,0,0,0,6,0,0,0,198,0,0,0,219,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,6,0,0,254,198,0,0,211,251,0,0,240,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,246,0,0,0,251,224,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,198,0,0,0,219,0,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0,0,198,0,0,3,241,0,0,48,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,198,0,0,0,217,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,6,0,0,255,198,0,0,105,219,0,0,224,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,118,0,0,0,243,224,0,0,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,7,15,0,255,254,252,126,0,0,62,124,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,27,7,0,255,240,251,31,0,0,254,176,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,15,0,0,255,248,126,15,0,12,20,56,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,11,15,0,254,224,252,63,0,0,126,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,31,3,0,255,240,255,31,128,0,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,15,0,0,254,248,126,15,0,28,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,23,15,0,254,192,248,63,0,0,254,252,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,31,0,0,255,224,127,31,128,4,28,60,4,5,27,5,27,23,4,23,7,8,23,8,28,8,21,26,6,3,0,20,27,10,22,22,26,10,14,26,8,2,0,16,30,12,21,23,24,11,8,25,11,1,0,13,32,15,19,25,21,10,3,21,32,18,14,1,16,26,1,11,20,8,0,17,31,20,13,27,18,1,4,9,21,6,0,13,29,22,10,27,21,3,6,8,24,5,1,9,28,22,6,25,23,5,7,8,27,5,4,5,27,23,4,23,23,8,8,8,4,20,9,2,26,24,30,7,5,19,8,7,5,18,14,1,25,25,31,10,2,18,8,6,8,18,20,2,24,26,32,12,0,16,9,5,10,18,25,4,21,27,0,14,31,14,11,3,12,20,29,8,0,11,14,1,17,27,29,17,11,23,31,13,0,8,18,1,13,26,27,18,8,24,30,18,2,7,23,2,10,23,25,19,27,23,27,5,4,23,4,5,23,8,23,20,29,10,6,4,21,26,1,21,27,9,11,5,27,14,8,3,14,27,0,17,30,12,16,4,23,18,10,2,8,26,31,15,0,13,22,4,16,20,13,2,30,20,3,22,27,6,2,9,9,19,16,1,26,24,31,10,1,18,7,6,4,15,20,2,19,27,32,14,1,14,13,5,2,10,24,3,11,27,31,19,4,10,18,5,4,23,4,5,27,23,27,5,8,20,8,8,21,25,30,8,0,17,9,2,20,23,27,12,14,23,31,11,0,11,15,1,16,26,28,16,9,19,31,14,2,6,21,2,10,26,26,21,8,14,31,15,8,2,5,24,26,5,23,25,10,9,30,18,0,20,14,1,17,27,28,9,15,5,29,20,0,14,12,27,19,2,29,14,21,4,28,21,0,10,7,26,22,5,27,17,27,5,4,5,4,23,27,23,24,8,8,8,3,20,10,2,25,25,31,8,4,18,9,6,5,18,17,2,23,26,32,12,1,16,10,5,7,17,23,3,20,27,0,13,32,15,12,3,10,18,28,7,0,10,17,27,15,2,30,17,11,20,31,11,0,8,18,1,13,27,27,19,10,22,31,15,2,6,21,1,10,25,25,20,7,23,30,19,3,6,25,3,8,23,24,20,27,5,4,5,27,23,4,23,23,8,8,8,27,8,22,26,5,4,1,21,26,9,23,21,26,10,17,27,6,3,0,18,29,10,23,22,23,10,11,26,7,2,0,16,31,12,22,23,21,10,6,24,10,1,32,14,0,14,20,25,19,8,2,20,32,17,14,1,17,27,2,11,20,5,0,15,31,20,13,27,18,2,4,10,23,4,1,10,29,21,8,26,21,5,6,9,27,23,27,5,4,23,4,5,24,8,24,20,2,18,25,24,10,2,30,7,4,19,20,23,4,14,23,25,17,1,32,11,1,16,15,24,8,10,21,26,23,2,32,15,0,13,9,24,15,8,18,26,1,8,28,6,4,22,29,19,22,9,15,27,5,4,0,18,30,10,24,22,27,13,11,26,12,1,0,14,30,14,18,23,29,18,7,25,20,1,0,9,27,18,13,23,4,23,4,5,27,23,27,5,8,20,8,8,10,3,1,20,31,11,22,26,11,5,4,16,17,5,0,17,32,17,16,27,15,2,3,12,22,9,0,14,29,22,10,26,21,2,5,7,23,14,0,13,23,26,26,4,5,23,8,3,21,19,1,10,31,8,14,1,17,27,3,19,16,23,2,8,32,14,19,1,12,26,2,14,10,24,3,7,31,18,24,2,9,23,4,11,4,5,27,5,27,23,4,23,28,8,21,26,6,3,0,20,26,10,14,26,8,2,0,16,24,11,8,25,11,1,0,13,21,10,3,21,14,1,1,11,20,8,0,17,18,1,20,18,21,6,0,13,19,20,21,3,24,5,1,9,17,21,23,5,27,5,4,5,16,21,23,8,9,2,30,7,14,21,8,7,14,1,31,10,12,21,8,6,20,2,11,20,32,12,9,5,25,4,10,20,31,14,11,3,29,8,8,19,14,1,29,17,31,13,18,1,7,17,27,18,30,18,23,2,6,16,25,19,27,23,27,5,6,14,23,8,29,10,21,26,7,12,27,9,27,14,14,27,8,10,30,12,23,18,8,26,31,15,11,8,16,20,30,20,3,22,15,7,9,19,26,24,1,18,18,8,4,15,19,27,21,9,1,14,2,10,11,27,24,11,4,10,4,23,4,5,25,14,8,20,0,17,9,2,24,16,6,18,0,11,15,1,22,19,5,16,2,6,20,20,21,2,5,14,17,20,8,2,26,5,5,13,14,19,14,1,28,9,6,12,13,17,19,2,29,14,6,10,14,15,22,5,27,17,7,9,16,14,24,8,8,8,8,20,18,14,4,18,9,6,19,22,20,14,1,16,10,5,15,22,22,16,0,13,12,3,10,21,22,18,0,10,15,2,7,19,0,8,21,19,18,1,5,16,2,6,21,1,19,21,5,14,3,6,25,3,17,21,5,11,27,5,4,5,15,21,23,8,27,8,5,4,14,21,26,9,26,10,6,3,12,20,29,10,23,10,7,2,31,12,11,20,21,10,10,1,32,14,10,19,19,8,32,17,14,1,9,18,20,5,31,20,8,17,18,2,23,4,29,21,7,16,21,5,27,23,27,5,6,14,24,8,25,24,30,7,7,12,20,23,23,25,32,11,8,10,15,24,21,26,11,8,32,15,9,24,18,26,14,7,4,22,29,19,15,27,18,7,0,18,24,22,11,26,0,14,22,9,18,23,7,25,0,9,24,11,13,23,4,23,4,5,25,14,8,20,10,3,1,20,24,16,11,5,17,5,0,17,22,18,15,2,22,9,0,14,21,2,19,19,23,14,0,13,26,4,8,3,21,19,1,10,31,8,14,1,16,23,2,8,32,14,19,1,10,24,3,7,31,18,24,2,16,14,6,7,25,7,25,21,13,14,27,9,22,23,9,5,11,14,28,12,18,24,13,4,28,14,9,12,14,25,17,4,27,14,9,10,11,24,20,5,26,14,7,22,10,9,20,18,26,14,5,20,12,7,19,20,26,14,4,17,14,7,17,21,27,14,4,14,16,21,16,7,6,12,28,15,14,21,17,7,10,10,29,16,12,21,19,8,14,10,28,18,11,20,20,8,18,11,10,20,26,20,5,8,21,14,7,6,8,19,23,22,21,17,10,4,7,17,23,11,19,21,13,4,6,16,24,12,16,23,16,5,6,14,25,14,17,7,11,23,24,16,7,12,17,9,6,22,23,18,8,10,16,10,3,19,20,20,26,10,14,11,17,21,29,13,3,15,13,10,29,16,13,21,18,8,12,8,26,20,9,19,21,9,13,6,21,23,7,17,24,11,16,23,16,5,25,14,6,14,10,21,19,5,24,16,7,12,6,16,23,5,22,19,9,10,5,12,26,7,20,20,12,9,8,7,17,20,28,10,5,17,12,4,14,19,29,13,4,15,13,17,17,3,29,16,3,13,14,15,22,4,27,19,4,9,16,14,25,7,6,7,6,21,18,14,4,19,9,5,22,23,20,14,3,16,13,4,18,24,3,14,22,16,17,3,14,24,4,14,22,18,20,4,11,23,5,14,24,6,21,19,11,10,5,14,26,8,19,21,12,8,5,14,27,11,17,21,14,7,27,14,4,14,15,21,15,7,25,16,3,13,17,7,14,21,21,18,2,12,19,7,12,20,17,18,3,10,20,8,11,20,13,17,21,8,5,8,26,20,10,14,24,22,23,9,8,6,10,11,21,24,24,11,8,17,12,7,18,24,25,12,7,16,16,23,16,5,6,14,25,14,14,21,20,5,7,12,24,16,14,19,25,6,8,10,23,18,15,18,28,9,11,8,5,18,17,17,14,7,2,15,28,13,18,18,2,12,18,7,13,20,19,20,5,8,22,9,10,19,18,22,10,5,24,11,7,17,15,23,16,5,25,14,6,14,21,7,12,23,7,12,24,16,25,12,8,23,9,9,22,18,26,16,5,21,11,8,19,19,23,21,14,8,3,18,26,11,19,24,17,9,2,15,27,13,18,11,14,25,2,12,28,15,17,13,9,24,4,9,27,19,16,16,12,20,7,23,4,26,3,28,3,29,5,29,8,27,12,25,16,22,20,19,23,16,26,13,27,10,27,8,25,6,23,5,19,6,16,7,13,8,10,11,7,14,6,16,6,18,8,21,10,23,13,24,16,25,19,25,22,24,24,23,25,20,16,25,15,23,13,23,10,25,6,26,6,22,9,19,9,17,7,16,3,14,3,11,8,11,11,11,12,10,12,6,14,2,16,4,17,8,18,10,20,9,25,7,27,9,25,13,23,15,23,16,26,18,29,21,26,22,21,21,20,22,19,24,18,29,16,25,14,23,13,23,11,23,8,23,5,25,2,25,3,23,8,20,11,18,14,17,16,16,17,16,20,14,25,11,28,9,28,9,25,9,23,10,22,10,20,9,19,7,17,4,15,2,11,3,9,6,9,9,9,10,9,11,8,11,7,11,7,11,16,25,19,24,21,23,22,22,24,21,24,21,24,20,21,18,16,16,11,14,9,12,8,12,9,11,10,10,11,9,13,8,16,6,20,4,26,3,29,4,28,8,25,11,21,13,18,15,16,16,13,17,10,19,6,22,3,25,3,28,7,28,12,26],Q=[162,180,35,230,34,182,112,1,208,17,48,37,18,6,113,255,208,17,96,26,208,17,96,37,49,0,18,14,196,112,68,112,18,28,195,3,96,30,97,3,34,92,245,21,208,20,63,1,18,60,208,20,113,255,208,20,35,64,18,28,231,161,34,114,232,161,34,132,233,161,34,150,226,158,18,80,102,0,246,21,246,7,54,0,18,60,208,20,113,1,18,42,162,196,244,30,102,0,67,1,102,4,67,2,102,8,67,3,102,12,246,30,0,238,208,20,112,255,35,52,63,1,0,238,208,20,112,1,35,52,0,238,208,20,112,1,35,52,63,1,0,238,208,20,112,255,35,52,0,238,208,20,115,1,67,4,99,0,34,92,35,52,63,1,0,238,208,20,115,255,67,255,99,3,34,92,35,52,0,238,128,0,103,5,104,6,105,4,97,31,101,16,98,7,0,238,64,224,0,0,64,192,64,0,0,224,64,0,64,96,64,0,64,64,96,0,32,224,0,0,192,64,64,0,0,224,128,0,64,64,192,0,0,224,32,0,96,64,64,0,128,224,0,0,64,192,128,0,192,96,0,0,64,192,128,0,192,96,0,0,128,192,64,0,0,96,192,0,128,192,64,0,0,96,192,0,192,192,0,0,192,192,0,0,192,192,0,0,192,192,0,0,64,64,64,64,0,240,0,0,64,64,64,64,0,240,0,0,208,20,102,53,118,255,54,0,19,56,0,238,162,180,140,16,60,30,124,1,60,30,124,1,60,30,124,1,35,94,75,10,35,114,145,192,0,238,113,1,19,80,96,27,107,0,208,17,63,0,123,1,208,17,112,1,48,37,19,98,0,238,96,27,208,17,112,1,48,37,19,116,142,16,141,224,126,255,96,27,107,0,208,225,63,0,19,144,208,225,19,148,208,209,123,1,112,1,48,37,19,134,75,0,19,166,125,255,126,255,61,1,19,130,35,192,63,1,35,192,122,1,35,192,128,160,109,7,128,210,64,4,117,254,69,2,101,4,0,238,167,0,242,85,168,4,250,51,242,101,240,41,109,50,110,0,221,229,125,5,241,41,221,229,125,5,242,41,221,229,167,0,242,101,162,180,0,238,106,0,96,25,0,238,55,35],Z=[0,224,108,0,76,0,110,15,162,3,96,32,240,85,0,224,34,190,34,118,34,142,34,94,34,70,18,16,97,0,98,23,99,4,65,16,0,238,162,232,241,30,240,101,64,0,18,52,240,41,210,53,113,1,114,5,100,3,132,18,52,0,18,34,98,23,115,6,18,34,100,3,132,226,101,3,133,210,148,80,0,238,68,3,0,238,100,1,132,228,34,166,18,70,100,3,132,226,101,3,133,210,148,80,0,238,68,0,0,238,100,255,132,228,34,166,18,94,100,12,132,226,101,12,133,210,148,80,0,238,68,0,0,238,100,252,132,228,34,166,18,118,100,12,132,226,101,12,133,210,148,80,0,238,68,12,0,238,100,4,132,228,34,166,18,142,162,232,244,30,240,101,162,232,254,30,240,85,96,0,162,232,244,30,240,85,142,64,0,238,60,0,18,210,34,28,34,216,34,28,162,248,253,30,240,101,141,0,0,238,124,255,205,15,0,238,125,1,96,15,141,2,237,158,18,216,237,161,18,226,0,238,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,13,0,1,2,4,5,6,8,9,10,12,14,3,7,11,15,132,228,34,166,18,118,100,12,132,226,101,12,133,210,148,80,0,238,68,12,0,238,100,4,132,228,34,166,18,142,162,232,244,30,240,101,162,232,254,30,240,85,96,0,162,232,244,30,240,85,142,64,0,238,60,0,18,210,34,28,34,216,34,28,162,248,253,30,240,101,141,0,0,238,124,255,205,15,0,238,125,1,96,15,141,2,237,158,18,216,237,161,18,226,0,238,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,0,13,0,1,2,4,5,6,8],ee=[110,5,101,0,107,6,106,0,163,12,218,177,122,4,58,64,18,8,123,2,59,18,18,6,108,32,109,31,163,16,220,209,34,246,96,0,97,0,163,18,208,17,112,8,163,14,208,17,96,64,240,21,240,7,48,0,18,52,198,15,103,30,104,1,105,255,163,14,214,113,163,16,220,209,96,4,224,161,124,254,96,6,224,161,124,2,96,63,140,2,220,209,163,14,214,113,134,132,135,148,96,63,134,2,97,31,135,18,71,31,18,172,70,0,104,1,70,63,104,255,71,0,105,1,214,113,63,1,18,170,71,31,18,170,96,5,128,117,63,0,18,170,96,1,240,24,128,96,97,252,128,18,163,12,208,113,96,254,137,3,34,246,117,1,34,246,69,96,18,222,18,70,105,255,128,96,128,197,63,1,18,202,97,2,128,21,63,1,18,224,128,21,63,1,18,238,128,21,63,1,18,232,96,32,240,24,163,14,126,255,128,224,128,4,97,0,208,17,62,0,18,48,18,222,120,255,72,254,104,255,18,238,120,1,72,2,104,1,96,4,240,24,105,255,18,112,163,20,245,51,242,101,241,41,99,55,100,0,211,69,115,5,242,41,211,69,0,238,224,0,128,0,252,0,170,0,0,0,0,0],te=[96,0,97,0,162,34,194,1,50,1,162,30,208,20,112,4,48,64,18,4,96,0,113,4,49,32,18,4,18,28,128,64,32,16,32,64,128,16],se=[18,132,112,4,64,64,113,4,64,64,96,0,49,32,18,186,162,56,254,30,97,252,241,85,110,0,162,56,254,30,241,101,162,128,208,19,126,2,49,252,18,26,208,19,18,178,162,56,254,30,241,85,126,2,18,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,160,224,128,241,10,65,15,18,176,106,8,138,18,74,0,18,150,250,24,18,132,129,20,129,20,240,10,128,4,128,4,162,128,208,19,18,132,111,0,208,17,140,244,208,17,0,238,242,10,96,0,97,0,110,0,114,255,66,0,18,132,108,0,162,131,208,17,132,240,208,17,112,252,34,166,113,4,34,166,112,4,34,166,112,4,34,166,113,252,34,166,113,252,34,166,112,252,34,166,112,252,34,166,112,4,113,4,76,2,18,2,76,3,18,250,52,1,18,2,18,46,52,1,18,46,18,2],re={chip8Logo:B,invaders:J,test1:q,test2:H,pong:G,trip8:W,tetris:Q,puzzle15:Z,brix:ee,maze:te,life:se},ie=re;r["a"].config.productionTip=!1,r["a"].filter("hex",(function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return void 0==e?"":"".concat(e.toString(16).padStart(t,"0").toUpperCase())}));for(var ne=A.createMemory(4096),ae=new K(64,32),ce=new F(ne,ae),oe=new Uint8Array(3583),ue=0;ue<ie["tetris"].length;ue++)oe[ue]=ie["tetris"][ue];ce.loadProgram(oe),new r["a"]({render:function(e){return e(O)},provide:{cpu:ce,memory:ne,display:ae}}).$mount("#app")},"743f":function(e,t,s){"use strict";s("1ec9")},"85ec":function(e,t,s){},de45:function(e,t,s){"use strict";s("fe8b")},f49a:function(e,t,s){"use strict";s("4474")},fe8b:function(e,t,s){}});
//# sourceMappingURL=app.42f19629.js.map